Mitov
//---------------------------------------------------------------------------
  [Name( 'ESP32' )]
  TESP32Category : TClassCategory;
//---------------------------------------------------------------------------
  +TArduinoESP32DefinedPinsSerial1 : TArduinoESP32DefinedPinsBasicSerial

    RXPin = 4
    TXPin = 2

  ;
//---------------------------------------------------------------------------
  +TArduinoESP32DefinedPinsSerial2 : TArduinoESP32DefinedPinsBasicSerial

    RXPin = 16
    TXPin = 17

  ;
//---------------------------------------------------------------------------
  +TArduinoESP32_Generic_I2C : TArduinoPinMapI2C

    [ValueRange( 0, 39 )]
    SDA = 21

    [ValueRange( 0, 39 )]
    SCL = 22

  ;
//---------------------------------------------------------------------------
  +TArduinoESP32_Generic_I2C_2 : TArduinoPinMapI2C

    [ValueRange( 0, 39 )]
    SDA = 16

    [ValueRange( 0, 39 )]
    SCL = 17

  ;
//---------------------------------------------------------------------------
  [ArduinoInclude( 'Arduino_ESP32_SPI_Class.h' )]
  [ArduinoClass( 'Mitov::Arduino_ESP32_SPI' )]
  +TArduinoESP32_Generic_SPI : TArduinoPinMapSPI

    [ValueRange( 0, 39 )]
    MOSI = 23

    [ValueRange( 0, 39 )]
    MISO = 19

    [ValueRange( 0, 39 )]
    SCK  = 18

  ;
//---------------------------------------------------------------------------
  [ArduinoInclude( 'Mitov_SPI1.h' )]
  [ArduinoInclude( 'Arduino_ESP32_SPI_Class.h' )]
  [ArduinoClass( 'Mitov::Arduino_ESP32_SPI' )]
  +TArduinoESP32_Generic_SPI1 : TArduinoPinMapSPI

    [ValueRange( 0, 39 )]
    MOSI = 15

    [ValueRange( 0, 39 )]
    MISO = 12

    [ValueRange( 0, 39 )]
    SCK  = 14

  ;
//---------------------------------------------------------------------------
  TArduinoESP32WiFiSockets : TArduinoBasicSockets;
//---------------------------------------------------------------------------
  [ArduinoExcludeCollectionItems]
  [ArduinoTemplateParameterCollectionCount]
  [TArduinoESP8266WiFiAccessPointElementIsEnabledCallChain]
  [TArduinoESP8266WiFiAccessPointElementTryConnectCallChain]
  [TArduinoESP8266WiFiAccessPointElementAssignDNSCallChain]
  [ArduinoTemplateParameterCollectionPowerConstIfZero( 'FAccessPointIndex', 1, 0 )]
  TArduinoESP32WiFiModuleRemoteAccessPoints : TArduinoPersistentCollection;
//---------------------------------------------------------------------------
  [ArduinoClass( 'Mitov::ESP32WiFiModuleAccessPoint' )]
  TArduinoESP32WiFiModuleAccessPoint : TArduinoCodeEnabledPersistent

    [ArduinoUseBindingCheckSetter_Parent( 'UpdateAccessPoint' )]
    Enabled

    SSID : String = ''
    Password : String = ''

    [DesignRange( 1, 13 )]
    Channel : Unsigned = 1

    IsHidden : Boolean = False
    Config : TArduinoESP8266WiFiModuleConfig

  ;
//---------------------------------------------------------------------------
  TArduinoESP32WiFiModuleOperations : TArduinoBasicNetworkOperations;
//---------------------------------------------------------------------------
  [Name( 'WiFi' )]
  [CreateName( 'WiFi' )]
  [ArduinoInclude( 'Mitov_ESP32_WiFi.h' )]
  [ArduinoClass( 'Mitov::ESP32WiFiModule' )]
  [ParentImage( TArduinoESP8266BasicModule )]
  [ArduinoInit]
  [ArduinoStart]
  [ArduinoLoopBegin]
  [ArduinoExcludeUnconnectedAndDefault]
  [ArduinoVariable( Boolean, 'FIsStarted' )]
  [ArduinoVariable( Boolean, 'FRemoteStarted' )]
  [ArduinoVariable( Boolean, 'FDNSUpdated' )]
  TArduinoESP32BasicWiFiModule : TArduinoEnableShield
  
    [ArduinoUseBindingCheckSetter( 'UpdateEnabled' )]
    Enabled

    AddressOutputPin : TOWArduinoStringSourcePin

    [Name( 'MAC Address' )]
    MACOutputPin : TOWArduinoStringSourcePin

    BSSIDOutputPin : TOWArduinoStringSourcePin
    GatewayIPOutputPin : TOWArduinoStringSourcePin
    SubnetMaskIPOutputPin : TOWArduinoStringSourcePin

    [ArduinoChangeOnlyPin]
    RemoteConnectedOutputPin : TOWArduinoDigitalFlexibleSourcePin

    [Name( 'Module As Access Point'  )]
    AccessPoint : TArduinoESP32WiFiModuleAccessPoint

    [Name( 'Connect To Access Points'  )]
    AccessPoints : TArduinoESP32WiFiModuleRemoteAccessPoints

    [ArduinoExcludeCollectionItems]
    Operations : TArduinoESP32WiFiModuleOperations

    [ArduinoExcludeCollectionItems]
    [ArduinoTemplateParameterCollectionCount]
    Sockets : TArduinoESP32WiFiSockets

    [ArduinoUseBindingCheckSetter( 'UpdateAutoReconnect' )]
    AutoReconnect : Boolean = True

    HostName : String = ''
    
    [NamePostfix( '(dBm)' )]
    [ValueRange( -1, 19.5 )]
    [ArduinoUseBindingCheckSetter( 'Update_TransmitPower' )]
    TransmitPower : Single = 19.5
    
  ;
//---------------------------------------------------------------------------
  [ArduinoInclude( 'WiFi.h' )]
  +TArduinoESP32WiFiModule : TArduinoESP32BasicWiFiModule

    [ArduinoUseBindingCheckSetter( 'UpdateLowPower' )]
    LowPower : Boolean = False

  ;
//---------------------------------------------------------------------------
  [Name( 'Hall Sensor' )]
  [CreateName( 'Hall Sensor' )]
  [ArduinoInclude( 'Mitov_ESP32_HallSensor.h' )]
  [ArduinoClass( 'Mitov::ESP32HallSensorModule' )]
  [ArduinoExcludeUnconnected]
  +TArduinoESP32HallSensorModule : TArduinoEnableShield

    [ArduinoPinDisconnectedAddCodeEntry( ceStart )]
    [ArduinoPinDisconnectedAddCodeEntry( ceLoopBegin )]
    ClockInputPin : TOWArduinoClockSinkPin

    [OWPrimaryPin]
    [ArduinoChangeOnlyPin]
    OutputPin : TOWArduinoAnalogFlexibleSourcePin

  ;
//---------------------------------------------------------------------------
  [ArduinoBoardDeclared]
  [ArduinoDeclarationSectionName( 'BoardDeclarations' )]
  [ArduinoDeclaredClass]
  [ArduinoInclude( 'Mitov_ESP32_BLE_Client.h' )]
  [ArduinoClass( 'Mitov::ESP32BluetoothLEClient' )]
  [ArduinoExcludeUnconnectedAndDefault]
  [ArduinoOwnerTemplateTypeAndReference]
  [ArduinoCallChain( 'TryStart' )]
  [ArduinoCallChainParameter( 'bool AValue' )]
  [ArduinoCallChainParameter( 'bool & AResult' )]
  *TArduinoESP32BluetoothLEClient : TArduinoCodeEnabledPersistent

    OutputPin : TOWArduinoBLEClientSourcePin

    [Name( 'BLE Client Serial' )]
    Serial : TArduinoBluetoothUartClient

  ;
//---------------------------------------------------------------------------
  [Name( 'Processor' )]
  [CreateName( 'Processor' )]
  [ParentImage( TArduinoProcessorModule )]
  +TArduinoESP32ProcessorModule : TArduinoShield

    [ArduinoExcludeCollectionItems]
    [ComponentEditorEntryDesign( 'Add &Operations ...' )]
    Operations : TArduinoESP32ProcessorModuleOperations

  ;
//---------------------------------------------------------------------------
  [ArduinoDefine( 'VISUINO_ESP32' )]
  [ArduinoBoardArchitecture( 'esp32' )]
  [ArduinoInclude( 'Arduino.h' )]
  [ArduinoInclude( 'Mitov_ESP32.h' )]
  TArduinoEssentialESP32Board : TArduinoBoardExtendableImplementation;
//---------------------------------------------------------------------------
  TArduinoBasicESP32Board : TArduinoEssentialESP32Board

    [AddItem( TArduinoESP32WiFiModule )]
    [AddItem( TArduinoEEPROMModule )]
    [AddItem( TArduinoESP32ProcessorModule )]
    [AddItem( TArduinoESP32HallSensorModule )]
    [AddItem( TArduinoESP32BluetoothLEModule )]
    Modules : TArduinoModules

  ;
//---------------------------------------------------------------------------
  [PersistentCollection( TArduinoESP32ProcessorModuleOperations )]
  [ArduinoHelpPostfix( '(ESP32 Processor Operations)' )]
  TArduinoESP32ProcessorModuleBasicOperation_Extender : Extender;
//---------------------------------------------------------------------------
  [ArduinoDeclaredClass]
  TArduinoESP32ProcessorModuleBasicOperation : TArduinoBasicNamedExludePersistent, TArduinoESP32ProcessorModuleBasicOperation_Extender;
//---------------------------------------------------------------------------
  TArduinoESP32ProcessorModuleBasicClockedOperation : TArduinoESP32ProcessorModuleBasicOperation

    ClockInputPin : TOWArduinoClockSinkPin

  ;
//---------------------------------------------------------------------------
  +TArduinoESP32ProcessorModuleGetIDOperation : TArduinoProcessorModuleBasicGetIDOperation, TArduinoESP32ProcessorModuleBasicOperation_Extender;
//---------------------------------------------------------------------------
  [Name( 'Deep Sleep' )]
  [CreateName( 'Deep Sleep' )]
  [ArduinoInclude( 'Esp.h' )]
  [ArduinoInclude( 'Mitov_ESP32_Processor.h' )]
  [ArduinoClass( 'Mitov::ESP32ProcessorDeepSleep' )]
//  [ParentImage( TArduinoESP8266ProcessorModuleDeepSleepOperation )]
  [Category( TArduinoPowerToolbarCategory )]
  +TArduinoESP32ProcessorModuleDeepSleepOperation : TArduinoESP32ProcessorModuleBasicSleepOperation;
//---------------------------------------------------------------------------
  [Name( 'Reset' )]
  [CreateName( 'Reset' )]
  [ArduinoInclude( 'Esp.h' )]
  [ArduinoInclude( 'Mitov_ESP32_Processor.h' )]
  [ArduinoClass( 'Mitov::ESP32ProcessorReset' )]
  [ParentImage( TArduinoProcessorModuleResetOperation )]
  +TArduinoESP32ProcessorModuleResetOperation : TArduinoESP32ProcessorModuleBasicClockedOperation;
//---------------------------------------------------------------------------
  TArduinoESP32ProcessorModuleBasicSleepOperation : TArduinoESP32ProcessorModuleBasicClockedOperation

    [NamePostfix( '(uS)' )]
    Period : Unsigned = 1000000

  ;
//---------------------------------------------------------------------------
  [Name( 'Light Sleep' )]
  [CreateName( 'Light Sleep' )]
  [ArduinoInclude( 'Esp.h' )]
  [ArduinoInclude( 'Mitov_ESP32_Processor.h' )]
  [ArduinoClass( 'Mitov::ESP32ProcessorLightSleep' )]
  [Category( TArduinoPowerToolbarCategory )]
  +TArduinoESP32ProcessorModuleLightSleepOperation : TArduinoESP32ProcessorModuleBasicSleepOperation;
//---------------------------------------------------------------------------
  [Name( 'Get Available RAM' )]
  [CreateName( 'Available RAM' )]
  [ArduinoInclude( 'Mitov_ESP32_Processor.h' )]
  [ArduinoClass( 'Mitov::ESP32GetArduinoAvailableRAM' )]
  [ParentImage( TArduinoProcessorAvailableRAMOperation )]
  +TArduinoESP32ProcessorAvailableRAMOperation : TArduinoESP32ProcessorModuleBasicClockedOperation

    [ArduinoPinDisconnectedAddCodeEntry( ceLoopBegin )]
    [ArduinoPinDisconnectedAddCodeEntry( ceStart )]
    ClockInputPin

    [OWPrimaryPin]
    [ArduinoChangeOnlyPin]
    OutputPin : TOWArduinoUnsignedSourcePin

    Enabled : Boolean = True

  ;
//---------------------------------------------------------------------------
  [PersistentCollection( TArduinoESP32WiFiModuleRemoteAccessPoints )]
  [ArduinoHelpPostfix( '(ESP32 WiFi Module)' )]
  [Name( 'WiFi Access Point' )]
  [CreateName( 'Access Point' )]
  [ArduinoClass( 'Mitov::ESP32ModuleRemoteAccessPoint' )]
  [ParentImage( TArduinoESP8266BasicModule )]
  [ArduinoDeclaredClass]
  [ArduinoOwnerTemplateTypeAndReference]
  +TArduinoESP32WiFiModuleRemoteAccessPoint : TArduinoBasicRemoteWiFiAccessPoint

    Password : String
    Channel : TArduinoESP8266WiFiModuleOptionalChannel

    [Name( 'MAC Address(BSSID)' )]
    MacAddress : TArduinoESP8266WiFiModuleOptionalMacAddress

    Config : TArduinoESP8266WiFiModuleRemoteConfig

  ;
//---------------------------------------------------------------------------
  [Name( 'Scan WiFi Networks' )]
  [CreateName( 'Scan Networks' )]
  [ArduinoClass( 'Mitov::ESP32ModuleScanNetworksOperation' )]
  [ArduinoLoopBegin]
  [ArduinoExcludeUnconnected]
  [ArduinoVariable( Boolean, 'FScanRequest' )]
  +TArduinoESP32WiFiModuleScanNetworksOperation : TArduinoESP32WiFiModuleOperation

    [ArduinoPinDisconnectedAddCodeEntry( ceStart )]
    ScanInputPin : TOWArduinoClockSinkPin

    [ArduinoChangeOnlyPin]
    ScanningOutputPin : TOWArduinoDigitalFlexibleSourcePin

    FailedOutputPin : TOWArduinoClockSourcePin
    CountOutputPin : TOWArduinoIntegerSourcePin
    SignalStrengthOutputPin : TOWArduinoIntegerSourcePin
    SSIDOutputPin : TOWArduinoStringSourcePin

    [Name( 'MACAddress(BSSID)' )]
    MACMACAddressOutputPin : TOWArduinoStringSourcePin

    EncryptionOutputPin : TOWArduinoUnsignedSourcePin
    ChannelOutputPin : TOWArduinoIntegerSourcePin
    FoundNetworkOutputPin : TOWArduinoClockSourcePin

    ShowHidden : Boolean = False

  ;
//---------------------------------------------------------------------------
  [PersistentCollection( TArduinoESP32WiFiModuleOperations )]
  [ArduinoHelpPostfix( '(ESP32 WiFi Operations)' )]
  [ArduinoDeclaredClass]
  TArduinoESP32WiFiModuleOperation : TArduinoCodePersistent;
//---------------------------------------------------------------------------
  TArduinoESP32WiFiModuleClockedOperation : TArduinoESP32WiFiModuleOperation

    ClockInputPin : TOWArduinoClockSinkPin

  ;
//---------------------------------------------------------------------------
  [Name( 'WiFi Signal Strength' )]
  [CreateName( 'SignalStrength' )]
  [ArduinoClass( 'Mitov::ESP32ModuleSignalStrengthOperation' )]
  [ArduinoOwnerTemplateTypeAndReference]
  [ArduinoExcludeUnconnectedAndDefault]
  +TArduinoESP32WiFiModuleSignalStrengthOperation : TArduinoESP32WiFiModuleClockedOperation

    SignalStrengthOutputPin : TOWArduinoIntegerSourcePin

  ;
//---------------------------------------------------------------------------
  [Name( 'WiFi Reconnect' )]
  [CreateName( 'Reconnect' )]
  [ArduinoClass( 'Mitov::ESP32ModuleReconnectOperation' )]
  +TArduinoESP32WiFiModuleReconnectOperation : TArduinoESP32WiFiModuleClockedOperation;
//---------------------------------------------------------------------------
  [Name( 'Program Over WiFi' )]
  [ArduinoInclude( 'ArduinoOTA.h' )]
  [ArduinoInclude( 'Mitov_ESP32_ProgramOverWiFi.h' )]
  [ArduinoClass( 'Mitov::ProgramESP32OverWiFi' )]
  [ArduinoStart]
  [ArduinoLoopBegin]
  +TArduinoESP32WiFiModuleProgramOverWiFiOperation : TArduinoESP32WiFiModuleOperation

    UploadingOutputPin : TOWArduinoDigitalFlexibleSourcePin

    [ArduinoChangeOnlyPin]
    ProgressOutputPin : TOWArduinoAnalogFlexibleSourcePin

    ErrorOutputPin : TOWArduinoUnsignedSourcePin

    [ValueRange( 0, $FFFF )]
    Port : Unsigned = 3232

    RebootOnSuccess : Boolean = True
    MdnsEnabled : Boolean = True
    Hostname : String = ''
    Password : String = ''

  ;
//---------------------------------------------------------------------------
  [PersistentCollection( TArduinoESP32BluetoothLEModuleOperations )]
  [ArduinoHelpPostfix( '(ESP32 BLE Operations)' )]
  [ArduinoDeclaredClass]
  TArduinoESP32BluetoothLEModuleOperation : TArduinoCodePersistent;
//---------------------------------------------------------------------------
  [Name( 'Search Bluetooth Devices' )]
  [CreateName( 'Search Devices' )]
  [ArduinoInclude( 'BLEScan.h' )]
  [ArduinoInclude( 'BLEAdvertisedDevice.h' )]
  [ArduinoInclude( 'Mitov_ESP32_BLE_Scan.h' )]
  [ArduinoClass( 'Mitov::ESP32ModuleScanBLEOperation' )]
  [ArduinoLoopBegin]
  [ArduinoExcludeUnconnected]
  [ArduinoVariable( Boolean, 'FScanRequest' )]
  TArduinoESP32BluetoothLEModuleScanOperation_Extender : Extender

    [ArduinoPinDisconnectedAddCodeEntry( ceStart )]
    [ArduinoPinConnectedAddCodeEntry( ceStart, 'SystemStartNoScan' )]
    ScanInputPin : TOWArduinoClockSinkPin

    [ArduinoChangeOnlyPin]
    ScanningOutputPin : TOWArduinoDigitalFlexibleSourcePin
    CountDevicesOutputPin : TOWArduinoUnsignedSourcePin
    DeviceNameOutputPin : TOWArduinoStringSourcePin

    [Name( 'MAC Address' )]
    MACAddressOutputPin : TOWArduinoStringSourcePin

    ServiceUUIDOutputPin : TOWArduinoStringSourcePin
    ManufacturerDataOutputPin : TOWArduinoStringSourcePin
    SignalStrengthOutputPin : TOWArduinoIntegerSourcePin
    TransmitPowerOutputPin : TOWArduinoUnsignedSourcePin

    FoundDeviceOutputPin : TOWArduinoClockSourcePin

    [NamePostfix( '(S)' )]
    Duration : Unsigned = 5

    [NamePostfix( '(mS)' )]
    Interval : Unsigned = 100

    [NamePostfix( '(mS)' )]
    [MaxValue( $FFFF )]
    ActiveScanWindow : Unsigned = 99

    Active : Boolean = False
    ClearStored : Boolean = True

  ;
//---------------------------------------------------------------------------
  +TArduinoESP32BluetoothLEModuleScanOperation : TArduinoESP32BluetoothLEModuleOperation, TArduinoESP32BluetoothLEModuleScanOperation_Extender

    ServiceDataOutputPin : TOWArduinoStringSourcePin
    PayloadOutputPin : TOWArduinoByteSourcePin
    
  ;
//---------------------------------------------------------------------------
  [ArduinoCallChain( 'TryConnect' )]
  [ArduinoCallChainParameter( 'BLEScanResults *AScanResults' )]
  TArduinoESP32BluetoothLERemoteDeviceIDs : TArduinoPersistentCollection;
//---------------------------------------------------------------------------
  [ArduinoHelpPostfix( '(ESP32 Bluetooth Remote Device IDs)' )]
  [PersistentCollection( TArduinoESP32BluetoothLERemoteDeviceIDs )]
  [Name( 'Device' )]
  [CreateName( 'Device' )]
  [ArduinoClass( 'Mitov::ESP32BluetoothLERemoteDeviceID' )]
  [ArduinoDeclaredClass]
  [ArduinoOwnerTemplateTypeAndReference]
  [ArduinoCallChain( 'TryConnect' )]
  [ArduinoCallChainParameter( 'AScanResults' )]
  +TArduinoESP32BluetoothLERemoteDeviceID : TArduinoCodePersistent

    Name : String
    MACAddress : TArduinoMacAddress
    ServiceUUID : String

  ;
//---------------------------------------------------------------------------
  [ArduinoBoardDeclared]
  [ArduinoDeclarationSectionName( 'BoardDeclarations' )]
  [PersistentCollection( TArduinoESP32BluetoothLERemoteDevices )]
  [ArduinoHelpPostfix( '(ESP32 Bluetooth Remote Devices)' )]
  [ArduinoDeclaredClass]
  [Name( 'Remote BLE Device' )]
  [CreateName( 'Remote BLE Device' )]
  [ArduinoInclude( 'BLEClient.h' )]
  [ArduinoInclude( 'Mitov_ESP32_BLE_Client.h' )]
  [ArduinoClass( 'Mitov::ESP32BluetoothLERemoteDevice' )]
  [ArduinoInit]
  [ArduinoLoopBegin]
  +TArduinoESP32BluetoothLERemoteDevice : TArduinoBasicNamedExludePersistent

    DeviceNameOutputPin : TOWArduinoStringSourcePin

    [Name( 'MAC Address' )]
    MACAddressOutputPin : TOWArduinoStringSourcePin

    [ArduinoTemplateParameterCollectionCount]
    DeviceIDs : TArduinoESP32BluetoothLERemoteDeviceIDs

    Client : TArduinoESP32BluetoothLEClient

  ;
//---------------------------------------------------------------------------
  [PersistentCollection( TArduinoESP32WiFiSockets )]
  [ArduinoHelpPostfix( '(ESP32 Socket)' )]
  [ArduinoClass( 'Mitov::TCPClientSocket' )] //<Mitov::BasicEthernetShield,WiFiClient>' )]
  [ArduinoOwnerTemplateTypeAndReference]
  [ArduinoTemplateParameter( '0_IMPLEMENTATION', 'Mitov::BasicTCPClientSocket_Implementation' )]
  [ArduinoTemplateParameter( '0_IMPLEMENTATION.0_CLIENT', 'WiFiClient' )]
  +TArduinoESP32WiFiTCPClientSocket : TArduinoBasicTCPClientSocket;
//---------------------------------------------------------------------------
  [PersistentCollection( TArduinoESP32WiFiSockets )]
  [ArduinoIncludeDefine( '#define protected public' )]
  [ArduinoIncludeDefine( '#define private public' )]
  [ArduinoInclude( 'WiFiClientSecure.h' )]
  [ArduinoIncludeDefine( '#undef private' )]
  [ArduinoIncludeDefine( '#undef protected' )]
  [ArduinoHelpPostfix( '(ESP32 Socket)' )]
  [ArduinoClass( 'Mitov::TCPCACertSecureClientSocket' )]
  [ArduinoOwnerTemplateTypeAndReference]
  [ArduinoTemplateParameter( 'CLIENT', 'WiFiClientSecure' )]
//  [ArduinoVariable( Boolean, 'FConnecting' )]
  +TArduinoESP32WiFiTCPSecureClientSocket : TArduinoBasicTCPSecureClientCACertSocket
  
//    [ArduinoUseBindingSetter]
    Insecure : Boolean = False
    
  ;
//---------------------------------------------------------------------------
  [PersistentCollection( TArduinoESP32WiFiSockets )]
  [ArduinoHelpPostfix( '(ESP32 Socket)' )]
  [ArduinoClass( 'Mitov::TCPServerSocket' )] //<Mitov::BasicEthernetShield,WiFiServer,WiFiClient>' )]
  [ArduinoOwnerTemplateTypeAndReference]
  [ArduinoTemplateParameter( 'SERVER', 'WiFiServer' )]
  [ArduinoTemplateParameter( 'CLIENT', 'WiFiClient' )]
  +TArduinoESP32WiFiTCPServerSocket : TArduinoBasicTCPServerSocket

    [ArduinoUseBindingCheckSetter( 'UpdateNoDelay' )]
    NoDelay : Boolean = True

  ;
//---------------------------------------------------------------------------
  [PersistentCollection( TArduinoESP32WiFiSockets )]
  [ArduinoInclude( 'WiFiUDP.h' )]
  [ArduinoHelpPostfix( '(ESP32 Socket)' )]
  [ArduinoClass( 'Mitov::UDPSocket' )]
  [ArduinoOwnerTemplateTypeAndReference]
  [ArduinoTemplateParameter( 'CLIENT', 'WiFiUDP' )]
  +TArduinoESP32WiFiUDPSocket : TArduinoBasicUDPSocket;
//---------------------------------------------------------------------------
  TArduinoESP32BluetoothLEModuleOperations : TArduinoPersistentCollection;
//---------------------------------------------------------------------------
  +TArduinoESP32BluetoothLEModule : TArduinoESP32BluetoothLEBasicModule

    [ValueRange( 0, 7 )]
    TransmitPower : Unsigned = 5

    Security : TArduinoESP32BluetoothLESecurity = Default

    [ArduinoExcludeCollectionItems]
    [ComponentEditorEntryDesign( 'Add BLE Operations ...' )]
    Operations : TArduinoESP32BluetoothLEModuleOperations
    
  ;
//---------------------------------------------------------------------------
; // Mitov